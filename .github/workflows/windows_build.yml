# Nombre del Workflow (aparecerá en la pestaña Actions de GitHub)
name: Build Flutter Windows App

# ¿Cuándo se ejecuta este workflow?
on:
  # Cuando haces push a la rama 'main'
  push:
    branches: [ main ]
  # También permite ejecutarlo manualmente desde la pestaña Actions
  workflow_dispatch:

# Definición de los trabajos (jobs) a ejecutar
jobs:
  build-windows:
    # Usar una máquina virtual Windows proporcionada por GitHub
    runs-on: windows-latest

    steps:
      # 1. Descargar tu código del repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configurar el entorno de Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Usar el canal estable
          # flutter-version: '3.x.x' # Opcional: especificar versión exacta

      # 3. Habilitar soporte de escritorio Windows (por si acaso)
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      # 4. Obtener las dependencias de Flutter
      - name: Get dependencies
        run: flutter pub get

      # 5. Construir la aplicación para Windows en modo Release
      - name: Build Windows Release
        run: flutter build windows --release

      # 6a. Verificar y listar la salida del build
      - name: Check Build Output
        run: |
          $outputPath = "build\windows\runner\Release"
          if (Test-Path -Path $outputPath) {
            Write-Host "Build output found at ${outputPath}. Contents:"
            Get-ChildItem -Path $outputPath -Recurse
          } else {
            Write-Error "¡ERROR! Build output directory '$outputPath' no encontrado."
            $parentPath1 = "build\windows\runner"
            if (Test-Path -Path $parentPath1) {
              Write-Host "Contents of ${parentPath1}:"
              Get-ChildItem -Path $parentPath1
            } else {
              $parentPath2 = "build\windows"
              if (Test-Path -Path $parentPath2) {
                Write-Host "Contents of ${parentPath2}:"
                Get-ChildItem -Path $parentPath2
              } else {
                Write-Host "'$parentPath1' and '$parentPath2' not found."
              }
            }
            exit 1
          }
        shell: powershell

      # 6b. Empaquetar la carpeta Release en un ZIP
      - name: Package Release Build
        run: Compress-Archive -Path build\windows\runner\Release -DestinationPath duelpoke_tourney_windows.zip -Force
        shell: powershell

      # 7. Subir el artefacto ZIP como output del workflow
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifact
          path: duelpoke_tourney_windows.zip
